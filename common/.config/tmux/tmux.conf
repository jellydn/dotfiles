# Tmux configuration - Based on typecraft-dev dotfiles with Kanagawa theme
# Reload config
unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded!"

# Terminal settings
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# Use Ctrl+a as prefix (GNU Screen style, minimal conflicts)
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Mouse support
set -g mouse on

# Vi mode
set-window-option -g mode-keys vi
set -g status-keys vi

# Vim-style pane navigation
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Window navigation with Tab/Shift+Tab (with prefix)
bind-key Tab next-window
bind-key BTab previous-window

# New window/pane in current directory
bind c new-window -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind _ split-window -h -c "#{pane_current_path}"

# Status bar at bottom
set-option -g status-position bottom

# Escape time for faster response
set -sg escape-time 10

# History limit
set -g history-limit 10000

# Start windows and panes at 1
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows when a window is closed
set -g renumber-windows on

# Kanagawa Color Scheme
# Based on https://github.com/rebelot/kanagawa.nvim
# Color definitions
kanagawa_dark_gray="#16161D"
kanagawa_gray="#2A2A37"
kanagawa_light_gray="#727169"
kanagawa_light_blue="#7fb4ca"
kanagawa_yellow="#e6c384"
kanagawa_white="#dcd7ba"
kanagawa_pink="#D27E99"
kanagawa_green="#98bb6c"
kanagawa_red="#C34043"

# Window style
set -g window-style "fg=default,bg=default"
set -g window-active-style "fg=default,bg=default"

# Pane borders
set -g pane-border-style "fg=$kanagawa_gray"
set -g pane-active-border-style "fg=$kanagawa_light_blue"
set -g pane-border-lines "single"

# Pane indicators
set -g display-panes-colour "$kanagawa_light_blue"
set -g display-panes-active-colour "$kanagawa_light_blue"

# Status line style (overridden to transparent at end of file)
set -g status-style "fg=$kanagawa_light_gray,bg=$kanagawa_dark_gray"

# Message style
set -g message-style "fg=$kanagawa_dark_gray,bg=$kanagawa_yellow,bold"
set -g message-command-style "fg=$kanagawa_yellow,bg=$kanagawa_dark_gray,bold"

# Mode style (copy mode)
set -g mode-style "fg=$kanagawa_dark_gray,bg=$kanagawa_yellow,bold"

# Window status
setw -g window-status-style "fg=$kanagawa_light_gray,bg=$kanagawa_dark_gray"
setw -g window-status-format " #I #W#{?#{||:#{window_bell_flag},#{window_zoomed_flag}}, ,}#{?window_bell_flag,!,}#{?window_zoomed_flag,Z,} "

setw -g window-status-current-style "fg=$kanagawa_dark_gray,bg=$kanagawa_light_blue,bold"
setw -g window-status-current-format " #I #W#{?#{||:#{window_bell_flag},#{window_zoomed_flag}}, ,}#{?window_bell_flag,!,}#{?window_zoomed_flag,Z,} "

# Window activity and bell styles
setw -g window-status-activity-style "fg=default,bg=default,underscore"
setw -g window-status-bell-style "fg=$kanagawa_yellow,bg=default,blink,bold"

# Status bar content
set -g status-left " ❐ #S "
set -g status-right " #{?client_prefix,⌨ ,}#{?mouse,↗ ,}#{?synchronize-panes,⚏ ,}| #h "

# Status bar colors
set -g status-left-style "fg=$kanagawa_dark_gray,bg=$kanagawa_yellow,bold"
set -g status-right-style "fg=$kanagawa_light_gray,bg=$kanagawa_dark_gray"

# Clock (when you hit prefix + t)
set -g clock-mode-colour "$kanagawa_light_blue"
set -g clock-mode-style 24

# Terminal title
set -g set-titles on
set -g set-titles-string "#h ❐ #S ● #I #W"

# Copy mode settings
set -g @copy_use_osc52_fallback on

# URL detection and click to open
# Simple URL extraction and opening (works on macOS)
bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n urls '$SHELL -c "grep -oE \"https?://[a-zA-Z0-9./?=_%:-]*\" /tmp/tmux-buffer | sort -u | fzf --prompt=\"Open URL: \" --bind=\"enter:execute(open {})\""'

# Alternative: Extract URLs and copy to clipboard
bind-key C-u capture-pane \; save-buffer /tmp/tmux-buffer \; run-shell 'grep -oE "https?://[a-zA-Z0-9./?=_%:-]*" /tmp/tmux-buffer | head -1 | pbcopy' \; display-message "URL copied to clipboard"

# Edit configuration
bind e new-window -n "tmux.conf" "nvim ~/.config/tmux/tmux.conf && tmux source-file ~/.config/tmux/tmux.conf && tmux display-message 'Config reloaded!'"


# Smart pane switching with awareness of Vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf|lazygit)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Vim-style copy mode bindings
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel

# Smart scrolling - PageUp/PageDown only when not in vim
bind-key -n PageUp if-shell "$is_vim" 'send-keys PageUp' 'copy-mode -u'
bind-key -n PageDown if-shell "$is_vim" 'send-keys PageDown' 'send-keys PageDown'

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# tmux-resurrect settings
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom)
run '~/.tmux/plugins/tpm/tpm'

# Apply Kanagawa dark background
set -g status-style "fg=$kanagawa_light_gray,bg=$kanagawa_dark_gray"
